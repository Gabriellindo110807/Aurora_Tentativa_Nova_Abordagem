Quero que voc√™ desenvolva um sistema web completo chamado **Carrinho Inteligente** para a segunda etapa do projeto.  
Esse sistema deve seguir os seguintes requisitos obrigat√≥rios e tamb√©m conter melhorias de usabilidade e design.

### üîπ Requisitos T√©cnicos
- Linguagem: PHP (orientado a objetos).
- Arquitetura: **MVC (Model, View, Controller)**.
- Persist√™ncia: **Padr√£o Repository** para acesso ao banco de dados.
- Banco: MySQL.
- Organiza√ß√£o do c√≥digo em pastas separadas: /model, /view, /controller, /repository.
- O projeto deve estar pronto para ser publicado em um reposit√≥rio p√∫blico no **GitHub**.

### üîπ Funcionalidades obrigat√≥rias (11 no total)
1. **Cadastro de usu√°rios** com dados pessoais e de pagamento.  
2. **Login de usu√°rios** com persist√™ncia de sess√£o.  
3. **Cadastrar listas de compras pr√©vias**.  
4. **Listagem de produtos** e **pesquisa de produtos** para localizar rapidamente no mercado.  
5. **Adicionar produtos ao carrinho** e **remover/cancelar produtos** de forma intuitiva.  
6. **Calcular e exibir valor total da compra em tempo real**, incluindo descontos.  
7. **Pagamento via cart√£o de cr√©dito, d√©bito, PIX ou carteiras digitais**.  
8. **Aviso em caso de erro de leitura nos produtos** (simula√ß√£o de QR Code/barcode).  
9. **Hist√≥rico de compras do usu√°rio** para revis√£o e consulta posterior.  
10. **Assistente virtual simples** para auxiliar o usu√°rio durante a compra (pode ser via mensagens autom√°ticas ou dicas na tela).  
11. **Carrinho com suporte a m√∫ltiplos idiomas** (ex.: portugu√™s, ingl√™s, espanhol).  

### üîπ P√°ginas adicionais (melhorias obrigat√≥rias para deixar o sistema mais completo)
- **P√°gina inicial (antes do login):**  
  Com apresenta√ß√£o do sistema, anima√ß√£o de entrada (exemplo: texto digitado, transi√ß√£o suave) e links para Login, Cadastro, Sobre e Contato.  

- **P√°gina Sobre:**  
  Explicando o objetivo do sistema, equipe de desenvolvimento e informa√ß√µes do projeto.  

- **P√°gina Contato:**  
  Formul√°rio simples para enviar mensagem de contato (nome, email, mensagem).  

- **Anima√ß√µes extras:**  
  - Anima√ß√£o inicial ao abrir a p√°gina (ex: fade-in, texto digitado ou transi√ß√£o de tela).  
  - Transi√ß√µes leves entre p√°ginas para melhor experi√™ncia do usu√°rio.  

### üîπ Estilo Visual
- Tema escuro como padr√£o, com op√ß√£o de **modo claro/escuro** persistente entre p√°ginas.  
- Paleta: fundo escuro, bot√µes em laranja vibrante, detalhes em azul.  
- Layout responsivo (funcionar bem em desktop e mobile).  
- Interfaces modernas, inspiradas em sistemas de autoatendimento.  

### üîπ README.md (obrigat√≥rio)
O reposit√≥rio no GitHub deve conter um arquivo **README.md** com:  
- Nome do projeto: Carrinho Inteligente.  
- Nomes e matr√≠culas dos integrantes.  
- Lista das 11 funcionalidades implementadas.  
- Lista das p√°ginas extras implementadas.  
- Instru√ß√µes claras para rodar o sistema (passo a passo da instala√ß√£o, depend√™ncias, script SQL para criar o banco).  

### üîπ Avalia√ß√£o (segundo o professor)
- Orienta√ß√£o a objetos bem aplicada: **3 pontos**.  
- Separa√ß√£o correta em MVC: **3 pontos**.  
- Uso do padr√£o Repository: **2 pontos**.  
- Funcionalidades obrigat√≥rias funcionando (11 no total): **5 pontos**.  
- Organiza√ß√£o do reposit√≥rio + README.md completo: **2 pontos**.  
**Total: 15 pontos.**

### üîπ Entreg√°veis
- C√≥digo pronto e funcional em um reposit√≥rio GitHub (n√£o em .zip).  
- Script SQL para cria√ß√£o do banco.  
- README.md bem documentado.  
- Projeto rodando para demonstra√ß√£o em v√≠deo e em sala de aula.